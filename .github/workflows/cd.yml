name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types: ["completed"]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH Keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts

      - name: Deploy
        run: |
          ssh -o StrictHostKeyChecking=yes -i ~/.ssh/id_rsa \
            ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
              set -e

              # instalar Docker e Compose
              sudo yum update -y
              sudo amazon-linux-extras install docker -y
              sudo service docker start
              sudo usermod -a -G docker $USER
              sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -Po '(?<=\"tag_name\": \")[^\"]*')/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose

              # clonar ou atualizar app
              cd ~
              if [ -d app ]; then
                cd app
                git fetch --all
                git reset --hard origin/main
              else
                git clone git@github.com:${{ github.repository }} app
                cd app
              fi

              # rodar containers
              docker-compose pull || true
              docker-compose up -d --build
            EOF